{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adfeastus2159"
		},
		"AzureBlobStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage1'"
		},
		"AzureDataLakeStorage1_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorage1'"
		},
		"AzureSqlDatabase1_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'AzureSqlDatabase1'"
		},
		"AzureSynapseAnalytics1_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'AzureSynapseAnalytics1'"
		},
		"HttpServer1_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'HttpServer1'"
		},
		"Snowflake1_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'Snowflake1'"
		},
		"source_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'source'"
		},
		"AzureDataLakeStorage1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://adlseastus2159.dfs.core.windows.net/"
		},
		"AzureSqlDatabase1_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "testmigratesqlserver.database.windows.net"
		},
		"AzureSqlDatabase1_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "testmigratesql"
		},
		"AzureSqlDatabase1_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "sqladminuser"
		},
		"AzureSynapseAnalytics1_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "wkpsyneastus2.sql.azuresynapse.net"
		},
		"AzureSynapseAnalytics1_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "dedpooluseastus2"
		},
		"AzureSynapseAnalytics1_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "sqladminuser"
		},
		"HttpServer1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "@{linkedService().url}"
		},
		"HttpServer1_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "diwakar96reddy@gmail.com"
		},
		"Snowflake1_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "SNOWFLAKE_SAMPLE_DATA"
		},
		"source_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "DESKTOP-TMTI7G7\\SQLEXPRESS"
		},
		"source_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "DW2016"
		},
		"source_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "migration"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/CopyPipeline_ja5')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_ja5",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "adlsfseastus2//"
							},
							{
								"name": "Destination",
								"value": "dbo.AzureBlobStorageFile"
							}
						],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings",
									"skipLineCount": 0
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"writeBehavior": "Insert",
								"tableOption": "autoCreate"
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								},
								"path": "adlsfseastus2"
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"type": "String",
											"ordinal": 1
										},
										"sink": {
											"name": "Column1",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_ja5",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_ja5",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-09-03T05:44:24Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_ja5')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_ja5')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DEMO_PIPELINE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Read sys tables",
						"description": "",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "select distinct table_schema,table_name from information_schema.columns;",
								"queryTimeout": "02:00:00",
								"isolationLevel": "ReadCommitted",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SqlServerTable1",
								"type": "DatasetReference",
								"parameters": {
									"schemascr": {
										"value": "@pipeline().parameters.check",
										"type": "Expression"
									},
									"tablesrc": {
										"value": "@pipeline().parameters.check2",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "copy all tables",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Read sys tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Read sys tables').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "copy_table",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SqlDWSink",
											"allowCopyCommand": true,
											"copyCommandSettings": {},
											"tableOption": "autoCreate",
											"disableMetricsCollection": false
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "AzureBlobStorage1",
												"type": "LinkedServiceReference"
											}
										}
									},
									"inputs": [
										{
											"referenceName": "SqlServerTable1",
											"type": "DatasetReference",
											"parameters": {
												"schemascr": {
													"value": "@item().table_schema",
													"type": "Expression"
												},
												"tablesrc": {
													"value": "@item().table_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "AzureSynapseAnalyticsTable1",
											"type": "DatasetReference",
											"parameters": {
												"tgt_schema": {
													"value": "@item().table_schema",
													"type": "Expression"
												},
												"tgt_table": {
													"value": "@item().table_name",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"check": {
						"type": "string",
						"defaultValue": "dbo"
					},
					"check2": {
						"type": "string",
						"defaultValue": "MyTable"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-09-06T06:18:01Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SqlServerTable1')]",
				"[concat(variables('factoryId'), '/datasets/AzureSynapseAnalyticsTable1')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_METADATA')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "lkp_config",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('select COUNT(RunningStatus) AS CNT,RunningStatus  FROM config.Pipelines_Config where sourcecode=','''',\npipeline().parameters.sourcecode,'''',\n'and ActiveFlag=',\n'''',\npipeline().parameters.flag,\n'''',\n'GROUP BY RunningStatus \nhaving COUNT(RunningStatus)>0')",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dsazuresql",
								"type": "DatasetReference",
								"parameters": {
									"TABLE": {
										"value": "@pipeline().parameters.table",
										"type": "Expression"
									},
									"SCHEMA": {
										"value": "@pipeline().parameters.SCHEMA",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "lkp_config",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('lkp_config').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Append variable1",
									"type": "AppendVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "STATUS",
										"value": {
											"value": "@item().RunningStatus",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@or(contains(variables('STATUS'),'RUNNING'),\ncontains(variables('STATUS'),'FAILED'))",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "RUN THE JOB",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "RUN_SUB",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "another batch in progress OR FAILED",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 1
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"sourcecode": {
						"type": "string",
						"defaultValue": "DSA"
					},
					"SCHEMA": {
						"type": "string",
						"defaultValue": "config"
					},
					"table": {
						"type": "string",
						"defaultValue": "Pipelines_Config"
					},
					"flag": {
						"type": "string",
						"defaultValue": "Y"
					}
				},
				"variables": {
					"STATUS": {
						"type": "Array"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/dsazuresql')]",
				"[concat(variables('factoryId'), '/pipelines/RUN_SUB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_METADATA_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "lkp_config",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT \n    CASE \n\t    WHEN COUNT(CASE WHEN RunningStatus = 'RUNNING' THEN 1 END) > 0 THEN 'running'\n        WHEN COUNT(CASE WHEN RunningStatus = 'FAILED' THEN 1 END) > 0 THEN 'fail'        \n        WHEN COUNT(CASE WHEN RunningStatus = 'SUCCESS' THEN 1 END) = COUNT(*) THEN 'success'\n        ELSE 'unknown'\n    END AS overall_status\nFROM config.Pipelines_Config where sourcecode='DSA'\nand ActiveFlag='Y';",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dsazuresql",
								"type": "DatasetReference",
								"parameters": {
									"TABLE": {
										"value": "@pipeline().parameters.table",
										"type": "Expression"
									},
									"SCHEMA": {
										"value": "@pipeline().parameters.SCHEMA",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Switch1",
						"type": "Switch",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"on": {
								"value": "@variables('STATUS')",
								"type": "Expression"
							},
							"cases": [
								{
									"value": "fail",
									"activities": [
										{
											"name": "run the pipeline_copy1",
											"type": "ExecutePipeline",
											"dependsOn": [],
											"policy": {
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "RUN_FAIL",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {}
											}
										}
									]
								},
								{
									"value": "running",
									"activities": [
										{
											"name": "Wait for the job to complete",
											"type": "Wait",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"waitTimeInSeconds": 1
											}
										},
										{
											"name": "Fail1",
											"type": "Fail",
											"dependsOn": [
												{
													"activity": "Wait for the job to complete",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"userProperties": [],
											"typeProperties": {
												"message": "one of the batch job has failed",
												"errorCode": "1001"
											}
										}
									]
								},
								{
									"value": "success",
									"activities": [
										{
											"name": "run the pipeline",
											"type": "ExecutePipeline",
											"dependsOn": [],
											"policy": {
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "RUN_SUCCESS",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "lkp_config",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "STATUS",
							"value": {
								"value": "@string(activity('lkp_config').output.value[0].overall_status)",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"sourcecode": {
						"type": "string",
						"defaultValue": "DSA"
					},
					"SCHEMA": {
						"type": "string",
						"defaultValue": "config"
					},
					"table": {
						"type": "string",
						"defaultValue": "Pipelines_Config"
					},
					"flag": {
						"type": "string",
						"defaultValue": "Y"
					}
				},
				"variables": {
					"STATUS": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/dsazuresql')]",
				"[concat(variables('factoryId'), '/pipelines/RUN_FAIL')]",
				"[concat(variables('factoryId'), '/pipelines/RUN_SUCCESS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_METADATA_main')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "lkp_config",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT \n    CASE \n\t    WHEN COUNT(CASE WHEN RunningStatus = 'RUNNING' THEN 1 END) > 0 THEN 'running'\n        WHEN COUNT(CASE WHEN RunningStatus = 'FAILED' THEN 1 END) > 0 THEN 'fail'        \n        WHEN COUNT(CASE WHEN RunningStatus = 'SUCCESS' THEN 1 END) = COUNT(*) THEN 'success'\n        ELSE 'unknown'\n    END AS overall_status\nFROM config.Pipelines_Config where sourcecode='DSA'\nand ActiveFlag='Y';",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dsazuresql",
								"type": "DatasetReference",
								"parameters": {
									"TABLE": {
										"value": "@pipeline().parameters.table",
										"type": "Expression"
									},
									"SCHEMA": {
										"value": "@pipeline().parameters.SCHEMA",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "running",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "lkp_config",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('lkp_config').output.value[0].overall_status,'running')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "running_fail_copy1",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "curent batch job is runng",
										"errorCode": "2019"
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "running_fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "curent batch job is runng",
										"errorCode": "2019"
									}
								}
							]
						}
					},
					{
						"name": "success",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "lkp_config",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('lkp_config').output.value[0].overall_status,'success')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Fail_succes",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "no mre excutim",
										"errorCode": "13145"
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Wait_success",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 1
									}
								}
							]
						}
					},
					{
						"name": "LKP_CONFIG_TABLE_success",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Scriptsuccess",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('select *  FROM config.Pipelines_Config where sourcecode=','''',\npipeline().parameters.SOURCE_CODE,'''',\n'and ActiveFlag=',\n'''',\npipeline().parameters.FLAG,\n'''')",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dsazuresql",
								"type": "DatasetReference",
								"parameters": {
									"TABLE": {
										"value": "@pipeline().parameters.table",
										"type": "Expression"
									},
									"SCHEMA": {
										"value": "@pipeline().parameters.SCHEMA",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach_success",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LKP_CONFIG_TABLE_success",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LKP_CONFIG_TABLE_success').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Switch1",
									"type": "Switch",
									"state": "Inactive",
									"onInactiveMarkAs": "Succeeded",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"on": {
											"value": "@source_code",
											"type": "Expression"
										},
										"cases": [
											{
												"value": "dsa",
												"activities": [
													{
														"name": "cpy_data",
														"type": "Copy",
														"dependsOn": [
															{
																"activity": "Stored procedure5",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "SqlServerSource",
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"sink": {
																"type": "AzureSqlSink",
																"writeBehavior": "insert",
																"sqlWriterUseTableLock": false
															},
															"enableStaging": false,
															"translator": {
																"type": "TabularTranslator",
																"typeConversion": true,
																"typeConversionSettings": {
																	"allowDataTruncation": true,
																	"treatBooleanAsNumber": false
																}
															}
														},
														"inputs": [
															{
																"referenceName": "SqlServerTable1",
																"type": "DatasetReference",
																"parameters": {
																	"schemascr": {
																		"value": "@item().SourceSchemaName",
																		"type": "Expression"
																	},
																	"tablesrc": {
																		"value": "@item().SourceTableName",
																		"type": "Expression"
																	}
																}
															}
														],
														"outputs": [
															{
																"referenceName": "dsazuresql",
																"type": "DatasetReference",
																"parameters": {
																	"TABLE": {
																		"value": "@item().TargetTableName",
																		"type": "Expression"
																	},
																	"SCHEMA": {
																		"value": "@item().TargetSchemaName",
																		"type": "Expression"
																	}
																}
															}
														]
													},
													{
														"name": "success_conf_update",
														"type": "SqlServerStoredProcedure",
														"dependsOn": [
															{
																"activity": "cpy_data",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"storedProcedureName": "[[config].[successstatus]",
															"storedProcedureParameters": {
																"id": {
																	"value": {
																		"value": "@item().Id",
																		"type": "Expression"
																	},
																	"type": "Int32"
																}
															}
														},
														"linkedServiceName": {
															"referenceName": "AzureSqlDatabase1",
															"type": "LinkedServiceReference"
														}
													},
													{
														"name": "failed_cong_update",
														"type": "SqlServerStoredProcedure",
														"dependsOn": [
															{
																"activity": "cpy_data",
																"dependencyConditions": [
																	"Failed"
																]
															}
														],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"storedProcedureName": "[[config].[failstatus]",
															"storedProcedureParameters": {
																"id": {
																	"value": {
																		"value": "@item().Id",
																		"type": "Expression"
																	},
																	"type": "Int32"
																}
															}
														},
														"linkedServiceName": {
															"referenceName": "AzureSqlDatabase1",
															"type": "LinkedServiceReference"
														}
													},
													{
														"name": "Stored procedure5",
														"type": "SqlServerStoredProcedure",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"storedProcedureName": "[[config].[resetstatus]"
														},
														"linkedServiceName": {
															"referenceName": "AzureSqlDatabase1",
															"type": "LinkedServiceReference"
														}
													}
												]
											},
											{
												"value": "sap"
											},
											{
												"value": "ava"
											}
										]
									}
								},
								{
									"name": "cpy_data_copy2_success",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "SqlServerTable1",
											"type": "DatasetReference",
											"parameters": {
												"schemascr": {
													"value": "@item().SourceSchemaName",
													"type": "Expression"
												},
												"tablesrc": {
													"value": "@item().SourceTableName",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "dsazuresql",
											"type": "DatasetReference",
											"parameters": {
												"TABLE": {
													"value": "@item().TargetTableName",
													"type": "Expression"
												},
												"SCHEMA": {
													"value": "@item().TargetSchemaName",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "SUCCESS_succ",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "cpy_data_copy2_success",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase1",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@concat('update [config].[Pipelines_Config] set RunningStatus=''SUCCESS'' where id=','''',item().id,'''')",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "FAIL_succ",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "cpy_data_copy2_success",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase1",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@concat('update [config].[Pipelines_Config] set RunningStatus=''FAILED'' where id=','''',item().id,'''')",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								}
							]
						}
					},
					{
						"name": "Scriptsuccess",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "success",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase1",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "update [config].[Pipelines_Config] set RunningStatus='RUNNING'"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "LKP_CONFIG_TABLE_fail",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "FAIL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('select *  FROM config.Pipelines_Config where sourcecode=','''',\npipeline().parameters.sourcecode,'''',\n'and ActiveFlag=',\n'''',\npipeline().parameters.flag,\n'''','AND RunningStatus=''FAILED''')",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dsazuresql",
								"type": "DatasetReference",
								"parameters": {
									"TABLE": {
										"value": "@pipeline().parameters.table",
										"type": "Expression"
									},
									"SCHEMA": {
										"value": "@pipeline().parameters.SCHEMA",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach_fail",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LKP_CONFIG_TABLE_fail",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LKP_CONFIG_TABLE_fail').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "cpy_data_copy2_fail",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Script_fail",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "SqlServerTable1",
											"type": "DatasetReference",
											"parameters": {
												"schemascr": {
													"value": "@item().SourceSchemaName",
													"type": "Expression"
												},
												"tablesrc": {
													"value": "@item().SourceTableName",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "dsazuresql",
											"type": "DatasetReference",
											"parameters": {
												"TABLE": {
													"value": "@item().TargetTableName",
													"type": "Expression"
												},
												"SCHEMA": {
													"value": "@item().TargetSchemaName",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "SUCCESS_fail",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "cpy_data_copy2_fail",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase1",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@concat('update [config].[Pipelines_Config] set RunningStatus=''SUCCESS'' where id=','''',item().id,'''')",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "FAIL_fail",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "cpy_data_copy2_fail",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase1",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@concat('update [config].[Pipelines_Config] set RunningStatus=''FAILED'' where id=','''',item().id,'''')",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "Script_fail",
									"type": "Script",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase1",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@CONCAT('update [config].[Pipelines_Config] set RunningStatus=''FAILED'' WHERE  ID=','''',item().id,'''')",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								}
							]
						}
					},
					{
						"name": "FAIL",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "lkp_config",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('lkp_config').output.value[0].overall_status,'fail')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Fail1",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "failu stoppf fail",
										"errorCode": "2200"
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Wait_Fail",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 1
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"sourcecode": {
						"type": "string",
						"defaultValue": "DSA"
					},
					"SCHEMA": {
						"type": "string",
						"defaultValue": "config"
					},
					"table": {
						"type": "string",
						"defaultValue": "Pipelines_Config"
					},
					"flag": {
						"type": "string",
						"defaultValue": "Y"
					},
					"SOURCE_CODE": {
						"type": "string",
						"defaultValue": "DSA"
					}
				},
				"variables": {
					"STATUS": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/dsazuresql')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]",
				"[concat(variables('factoryId'), '/datasets/SqlServerTable1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RUN_FAIL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LKP_CONFIG_TABLE",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('select *  FROM config.Pipelines_Config where sourcecode=','''',\npipeline().parameters.SOURCE_CODE,'''',\n'and ActiveFlag=',\n'''',\npipeline().parameters.FLAG,\n'''','AND RunningStatus=''FAILED''')",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dsazuresql",
								"type": "DatasetReference",
								"parameters": {
									"TABLE": {
										"value": "@pipeline().parameters.TABLESRC",
										"type": "Expression"
									},
									"SCHEMA": {
										"value": "@pipeline().parameters.SCHEMASRC",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LKP_CONFIG_TABLE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LKP_CONFIG_TABLE').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Switch1",
									"type": "Switch",
									"state": "Inactive",
									"onInactiveMarkAs": "Succeeded",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"on": {
											"value": "@source_code",
											"type": "Expression"
										},
										"cases": [
											{
												"value": "dsa",
												"activities": [
													{
														"name": "cpy_data",
														"type": "Copy",
														"dependsOn": [
															{
																"activity": "Stored procedure5",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "SqlServerSource",
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"sink": {
																"type": "AzureSqlSink",
																"writeBehavior": "insert",
																"sqlWriterUseTableLock": false
															},
															"enableStaging": false,
															"translator": {
																"type": "TabularTranslator",
																"typeConversion": true,
																"typeConversionSettings": {
																	"allowDataTruncation": true,
																	"treatBooleanAsNumber": false
																}
															}
														},
														"inputs": [
															{
																"referenceName": "SqlServerTable1",
																"type": "DatasetReference",
																"parameters": {
																	"schemascr": {
																		"value": "@item().SourceSchemaName",
																		"type": "Expression"
																	},
																	"tablesrc": {
																		"value": "@item().SourceTableName",
																		"type": "Expression"
																	}
																}
															}
														],
														"outputs": [
															{
																"referenceName": "dsazuresql",
																"type": "DatasetReference",
																"parameters": {
																	"TABLE": {
																		"value": "@item().TargetTableName",
																		"type": "Expression"
																	},
																	"SCHEMA": {
																		"value": "@item().TargetSchemaName",
																		"type": "Expression"
																	}
																}
															}
														]
													},
													{
														"name": "success_conf_update",
														"type": "SqlServerStoredProcedure",
														"dependsOn": [
															{
																"activity": "cpy_data",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"storedProcedureName": "[[config].[successstatus]",
															"storedProcedureParameters": {
																"id": {
																	"value": {
																		"value": "@item().Id",
																		"type": "Expression"
																	},
																	"type": "Int32"
																}
															}
														},
														"linkedServiceName": {
															"referenceName": "AzureSqlDatabase1",
															"type": "LinkedServiceReference"
														}
													},
													{
														"name": "failed_cong_update",
														"type": "SqlServerStoredProcedure",
														"dependsOn": [
															{
																"activity": "cpy_data",
																"dependencyConditions": [
																	"Failed"
																]
															}
														],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"storedProcedureName": "[[config].[failstatus]",
															"storedProcedureParameters": {
																"id": {
																	"value": {
																		"value": "@item().Id",
																		"type": "Expression"
																	},
																	"type": "Int32"
																}
															}
														},
														"linkedServiceName": {
															"referenceName": "AzureSqlDatabase1",
															"type": "LinkedServiceReference"
														}
													},
													{
														"name": "Stored procedure5",
														"type": "SqlServerStoredProcedure",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"storedProcedureName": "[[config].[resetstatus]"
														},
														"linkedServiceName": {
															"referenceName": "AzureSqlDatabase1",
															"type": "LinkedServiceReference"
														}
													}
												]
											},
											{
												"value": "sap"
											},
											{
												"value": "ava"
											}
										]
									}
								},
								{
									"name": "cpy_data_copy2",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Script1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "SqlServerTable1",
											"type": "DatasetReference",
											"parameters": {
												"schemascr": {
													"value": "@item().SourceSchemaName",
													"type": "Expression"
												},
												"tablesrc": {
													"value": "@item().SourceTableName",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "dsazuresql",
											"type": "DatasetReference",
											"parameters": {
												"TABLE": {
													"value": "@item().TargetTableName",
													"type": "Expression"
												},
												"SCHEMA": {
													"value": "@item().TargetSchemaName",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "SUCCESS",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "cpy_data_copy2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase1",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@concat('update [config].[Pipelines_Config] set RunningStatus=''SUCCESS'' where id=','''',item().id,'''')",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "FAIL",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "cpy_data_copy2",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase1",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@concat('update [config].[Pipelines_Config] set RunningStatus=''FAILED'' where id=','''',item().id,'''')",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "Script1",
									"type": "Script",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase1",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@CONCAT('update [config].[Pipelines_Config] set RunningStatus=''FAILED'' WHERE  ID=','''',item().id,'''')",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SCHEMASRC": {
						"type": "string",
						"defaultValue": "config"
					},
					"TABLESRC": {
						"type": "string",
						"defaultValue": "Pipelines_Config"
					},
					"SOURCE_CODE": {
						"type": "string",
						"defaultValue": "DSA"
					},
					"FLAG": {
						"type": "string",
						"defaultValue": "Y"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/dsazuresql')]",
				"[concat(variables('factoryId'), '/datasets/SqlServerTable1')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RUN_SUB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LKP_CONFIG_TABLE",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Stored procedure4",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('select *  FROM config.Pipelines_Config where sourcecode=','''',\npipeline().parameters.SOURCE_CODE,'''',\n'and ActiveFlag=',\n'''',\npipeline().parameters.FLAG,\n'''')",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dsazuresql",
								"type": "DatasetReference",
								"parameters": {
									"TABLE": {
										"value": "@pipeline().parameters.TABLESRC",
										"type": "Expression"
									},
									"SCHEMA": {
										"value": "@pipeline().parameters.SCHEMASRC",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LKP_CONFIG_TABLE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LKP_CONFIG_TABLE').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Switch1",
									"type": "Switch",
									"state": "Inactive",
									"onInactiveMarkAs": "Succeeded",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"on": {
											"value": "@source_code",
											"type": "Expression"
										},
										"cases": [
											{
												"value": "dsa",
												"activities": [
													{
														"name": "cpy_data",
														"type": "Copy",
														"dependsOn": [
															{
																"activity": "Stored procedure5",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "SqlServerSource",
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"sink": {
																"type": "AzureSqlSink",
																"writeBehavior": "insert",
																"sqlWriterUseTableLock": false
															},
															"enableStaging": false,
															"translator": {
																"type": "TabularTranslator",
																"typeConversion": true,
																"typeConversionSettings": {
																	"allowDataTruncation": true,
																	"treatBooleanAsNumber": false
																}
															}
														},
														"inputs": [
															{
																"referenceName": "SqlServerTable1",
																"type": "DatasetReference",
																"parameters": {
																	"schemascr": {
																		"value": "@item().SourceSchemaName",
																		"type": "Expression"
																	},
																	"tablesrc": {
																		"value": "@item().SourceTableName",
																		"type": "Expression"
																	}
																}
															}
														],
														"outputs": [
															{
																"referenceName": "dsazuresql",
																"type": "DatasetReference",
																"parameters": {
																	"TABLE": {
																		"value": "@item().TargetTableName",
																		"type": "Expression"
																	},
																	"SCHEMA": {
																		"value": "@item().TargetSchemaName",
																		"type": "Expression"
																	}
																}
															}
														]
													},
													{
														"name": "success_conf_update",
														"type": "SqlServerStoredProcedure",
														"dependsOn": [
															{
																"activity": "cpy_data",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"storedProcedureName": "[[config].[successstatus]",
															"storedProcedureParameters": {
																"id": {
																	"value": {
																		"value": "@item().Id",
																		"type": "Expression"
																	},
																	"type": "Int32"
																}
															}
														},
														"linkedServiceName": {
															"referenceName": "AzureSqlDatabase1",
															"type": "LinkedServiceReference"
														}
													},
													{
														"name": "failed_cong_update",
														"type": "SqlServerStoredProcedure",
														"dependsOn": [
															{
																"activity": "cpy_data",
																"dependencyConditions": [
																	"Failed"
																]
															}
														],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"storedProcedureName": "[[config].[failstatus]",
															"storedProcedureParameters": {
																"id": {
																	"value": {
																		"value": "@item().Id",
																		"type": "Expression"
																	},
																	"type": "Int32"
																}
															}
														},
														"linkedServiceName": {
															"referenceName": "AzureSqlDatabase1",
															"type": "LinkedServiceReference"
														}
													},
													{
														"name": "Stored procedure5",
														"type": "SqlServerStoredProcedure",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"storedProcedureName": "[[config].[resetstatus]"
														},
														"linkedServiceName": {
															"referenceName": "AzureSqlDatabase1",
															"type": "LinkedServiceReference"
														}
													}
												]
											},
											{
												"value": "sap"
											},
											{
												"value": "ava"
											}
										]
									}
								},
								{
									"name": "cpy_data_copy2",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "SqlServerTable1",
											"type": "DatasetReference",
											"parameters": {
												"schemascr": {
													"value": "@item().SourceSchemaName",
													"type": "Expression"
												},
												"tablesrc": {
													"value": "@item().SourceTableName",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "dsazuresql",
											"type": "DatasetReference",
											"parameters": {
												"TABLE": {
													"value": "@item().TargetTableName",
													"type": "Expression"
												},
												"SCHEMA": {
													"value": "@item().TargetSchemaName",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "success_conf_update_copy2",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "cpy_data_copy2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[config].[successstatus]",
										"storedProcedureParameters": {
											"id": {
												"value": {
													"value": "@item().Id",
													"type": "Expression"
												},
												"type": "Int32"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase1",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "failed_cong_update_copy2",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "cpy_data_copy2",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[config].[failstatus]",
										"storedProcedureParameters": {
											"id": {
												"value": {
													"value": "@item().Id",
													"type": "Expression"
												},
												"type": "Int32"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase1",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "Stored procedure4",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[config].[resetstatus]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SCHEMASRC": {
						"type": "string",
						"defaultValue": "config"
					},
					"TABLESRC": {
						"type": "string",
						"defaultValue": "Pipelines_Config"
					},
					"SOURCE_CODE": {
						"type": "string",
						"defaultValue": "DSA"
					},
					"FLAG": {
						"type": "string",
						"defaultValue": "Y"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/dsazuresql')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]",
				"[concat(variables('factoryId'), '/datasets/SqlServerTable1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RUN_SUCCESS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LKP_CONFIG_TABLE",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Script1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('select *  FROM config.Pipelines_Config where sourcecode=','''',\npipeline().parameters.SOURCE_CODE,'''',\n'and ActiveFlag=',\n'''',\npipeline().parameters.FLAG,\n'''')",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dsazuresql",
								"type": "DatasetReference",
								"parameters": {
									"TABLE": {
										"value": "@pipeline().parameters.TABLESRC",
										"type": "Expression"
									},
									"SCHEMA": {
										"value": "@pipeline().parameters.SCHEMASRC",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LKP_CONFIG_TABLE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LKP_CONFIG_TABLE').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Switch1",
									"type": "Switch",
									"state": "Inactive",
									"onInactiveMarkAs": "Succeeded",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"on": {
											"value": "@source_code",
											"type": "Expression"
										},
										"cases": [
											{
												"value": "dsa",
												"activities": [
													{
														"name": "cpy_data",
														"type": "Copy",
														"dependsOn": [
															{
																"activity": "Stored procedure5",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "SqlServerSource",
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"sink": {
																"type": "AzureSqlSink",
																"writeBehavior": "insert",
																"sqlWriterUseTableLock": false
															},
															"enableStaging": false,
															"translator": {
																"type": "TabularTranslator",
																"typeConversion": true,
																"typeConversionSettings": {
																	"allowDataTruncation": true,
																	"treatBooleanAsNumber": false
																}
															}
														},
														"inputs": [
															{
																"referenceName": "SqlServerTable1",
																"type": "DatasetReference",
																"parameters": {
																	"schemascr": {
																		"value": "@item().SourceSchemaName",
																		"type": "Expression"
																	},
																	"tablesrc": {
																		"value": "@item().SourceTableName",
																		"type": "Expression"
																	}
																}
															}
														],
														"outputs": [
															{
																"referenceName": "dsazuresql",
																"type": "DatasetReference",
																"parameters": {
																	"TABLE": {
																		"value": "@item().TargetTableName",
																		"type": "Expression"
																	},
																	"SCHEMA": {
																		"value": "@item().TargetSchemaName",
																		"type": "Expression"
																	}
																}
															}
														]
													},
													{
														"name": "success_conf_update",
														"type": "SqlServerStoredProcedure",
														"dependsOn": [
															{
																"activity": "cpy_data",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"storedProcedureName": "[[config].[successstatus]",
															"storedProcedureParameters": {
																"id": {
																	"value": {
																		"value": "@item().Id",
																		"type": "Expression"
																	},
																	"type": "Int32"
																}
															}
														},
														"linkedServiceName": {
															"referenceName": "AzureSqlDatabase1",
															"type": "LinkedServiceReference"
														}
													},
													{
														"name": "failed_cong_update",
														"type": "SqlServerStoredProcedure",
														"dependsOn": [
															{
																"activity": "cpy_data",
																"dependencyConditions": [
																	"Failed"
																]
															}
														],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"storedProcedureName": "[[config].[failstatus]",
															"storedProcedureParameters": {
																"id": {
																	"value": {
																		"value": "@item().Id",
																		"type": "Expression"
																	},
																	"type": "Int32"
																}
															}
														},
														"linkedServiceName": {
															"referenceName": "AzureSqlDatabase1",
															"type": "LinkedServiceReference"
														}
													},
													{
														"name": "Stored procedure5",
														"type": "SqlServerStoredProcedure",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"storedProcedureName": "[[config].[resetstatus]"
														},
														"linkedServiceName": {
															"referenceName": "AzureSqlDatabase1",
															"type": "LinkedServiceReference"
														}
													}
												]
											},
											{
												"value": "sap"
											},
											{
												"value": "ava"
											}
										]
									}
								},
								{
									"name": "cpy_data_copy2",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "SqlServerTable1",
											"type": "DatasetReference",
											"parameters": {
												"schemascr": {
													"value": "@item().SourceSchemaName",
													"type": "Expression"
												},
												"tablesrc": {
													"value": "@item().SourceTableName",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "dsazuresql",
											"type": "DatasetReference",
											"parameters": {
												"TABLE": {
													"value": "@item().TargetTableName",
													"type": "Expression"
												},
												"SCHEMA": {
													"value": "@item().TargetSchemaName",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "SUCCESS",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "cpy_data_copy2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase1",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@concat('update [config].[Pipelines_Config] set RunningStatus=''SUCCESS'' where id=','''',item().id,'''')",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "FAIL",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "cpy_data_copy2",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase1",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@concat('update [config].[Pipelines_Config] set RunningStatus=''FAILED'' where id=','''',item().id,'''')",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								}
							]
						}
					},
					{
						"name": "Script1",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase1",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "update [config].[Pipelines_Config] set RunningStatus='RUNNING'"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SCHEMASRC": {
						"type": "string",
						"defaultValue": "config"
					},
					"TABLESRC": {
						"type": "string",
						"defaultValue": "Pipelines_Config"
					},
					"SOURCE_CODE": {
						"type": "string",
						"defaultValue": "DSA"
					},
					"FLAG": {
						"type": "string",
						"defaultValue": "Y"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/dsazuresql')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]",
				"[concat(variables('factoryId'), '/datasets/SqlServerTable1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"writeBehavior": "Insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "DEPARTMENT_ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DEPARTMENT_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DEPARTMENT_NAME",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DEPARTMENT_NAME",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "MANAGER_ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MANAGER_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LOCATION_ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "LOCATION_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DelimitedText1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSynapseAnalyticsTable1",
								"type": "DatasetReference",
								"parameters": {
									"tgt_schema": {
										"value": "@pipeline().parameters.tgt_sch",
										"type": "Expression"
									},
									"tgt_table": {
										"value": "@pipeline().parameters.tgt_tab",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"src_sch": {
						"type": "string"
					},
					"src_tab": {
						"type": "string"
					},
					"tgt_sch": {
						"type": "string"
					},
					"tgt_tab": {
						"type": "string"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-09-06T06:06:56Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DelimitedText1')]",
				"[concat(variables('factoryId'), '/datasets/AzureSynapseAnalyticsTable1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Script1",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase1",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "select obj.name as tableName, col.colorder as fieldSeq, col.name as fieldName,\ntyp.name as type,\ncol.prec as precision,\ncol.scale,\ncase when col.isnullable = 0 then 'N' else 'Y' end as isnullable\n\nfrom sys.sysobjects obj \n\ninner join sys.syscolumns col \non obj.id = col.id \n\ninner join sys.systypes typ \non typ.xtype = col.xtype\n\nwhere obj.xtype = 'U' \nand typ.name <> 'sysname'\norder by obj.name, col.colid"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl-extract-sql-raw')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "lkp-generate-sql",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[config].[generateIngestionSQL]",
								"storedProcedureParameters": {
									"dataSourceName": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.dataSourceName",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dsazuresql",
								"type": "DatasetReference",
								"parameters": {
									"TABLE": {
										"value": "@pipeline().parameters.dataSourceName",
										"type": "Expression"
									},
									"SCHEMA": {
										"value": "@pipeline().parameters.directoryName",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "forEach-source",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "lkp-generate-sql",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('lkp-generate-sql').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "copy-src-to-blob",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "sp-log-pipeline-run",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "@concat(\nitem().extractSQL, \n' AND ', \nitem().watermarkFieldName, \n' <= ', \n'CAST(''', \nactivity('lkp-src-watermark').output.firstRow.watermarkCurrentValue,\n''' as DATETIME2(0))'\n)",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "dssqlserver",
											"type": "DatasetReference",
											"parameters": {
												"schem": {
													"value": "@pipeline().parameters.dataSourceName",
													"type": "Expression"
												},
												"tbl": {
													"value": "@pipeline().parameters.dataSourceName",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "dsblobraw",
											"type": "DatasetReference",
											"parameters": {
												"containerName": {
													"value": "@pipeline().parameters.containerName",
													"type": "Expression"
												},
												"directoryName": {
													"value": "@pipeline().parameters.directoryName",
													"type": "Expression"
												},
												"fileName": {
													"value": "@concat(item().tableName, '_', formatDateTime(convertTimeZone(utcnow(), 'UTC', 'Eastern Standard Time'), 'yyyMMdd_HHmmss'))",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "lkp-src-watermark",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "@item().lkpWatermarkSQL",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "dssqlserver",
											"type": "DatasetReference",
											"parameters": {
												"schem": {
													"value": "@pipeline().parameters.dataSourceName",
													"type": "Expression"
												},
												"tbl": {
													"value": "@pipeline().parameters.containerName",
													"type": "Expression"
												}
											}
										}
									}
								},
								{
									"name": "sp-log-pipeline-run",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "lkp-src-watermark",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": {
											"value": "@pipeline().parameters.dataSourceName",
											"type": "Expression"
										},
										"storedProcedureParameters": {
											"pipelineName": {
												"value": {
													"value": "@pipeline().Pipeline",
													"type": "Expression"
												},
												"type": "String"
											},
											"tableId": {
												"value": {
													"value": "@item().tableId",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"tableName": {
												"value": {
													"value": "@item().tableName",
													"type": "Expression"
												},
												"type": "String"
											},
											"watermarkCurrentValue": {
												"value": {
													"value": "@activity('lkp-src-watermark').output.firstRow.watermarkCurrentValue",
													"type": "Expression"
												},
												"type": "String"
											},
											"watermarkPreviousValue": {
												"value": {
													"value": "@item().watermarkPreviousValue",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase1",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "sp-update-pipeline-run-success",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "copy-src-to-blob",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": {
											"value": "@pipeline().parameters.containerName",
											"type": "Expression"
										},
										"storedProcedureParameters": {
											"pipelineRunStatus": {
												"value": "Succeeded",
												"type": "String"
											},
											"tableId": {
												"value": {
													"value": "@item().tableId",
													"type": "Expression"
												},
												"type": "Int32"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase1",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "sp-update-pipeline-run-failed",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "copy-src-to-blob",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": {
											"value": "@pipeline().parameters.dataSourceName",
											"type": "Expression"
										},
										"storedProcedureParameters": {
											"pipelineRunStatus": {
												"value": "Failed",
												"type": "String"
											},
											"tableId": {
												"value": {
													"value": "@item().tableId",
													"type": "Expression"
												},
												"type": "Int32"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase1",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"dataSourceName": {
						"type": "string",
						"defaultValue": "Chinook"
					},
					"containerName": {
						"type": "string",
						"defaultValue": "raw"
					},
					"directoryName": {
						"type": "string",
						"defaultValue": "chinook\\inbound"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/dsazuresql')]",
				"[concat(variables('factoryId'), '/datasets/dssqlserver')]",
				"[concat(variables('factoryId'), '/datasets/dsblobraw')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/snowflakeexort')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SnowflakeV2Source",
								"exportSettings": {
									"type": "SnowflakeExportCopyCommand",
									"storageIntegration": "MY_ADLS_INTEGRATION1"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								},
								"path": "adlsfseastus2"
							}
						},
						"inputs": [
							{
								"referenceName": "SnowflakeTable",
								"type": "DatasetReference",
								"parameters": {
									"schema": {
										"value": "@pipeline().parameters.schema",
										"type": "Expression"
									},
									"table": {
										"value": "@pipeline().parameters.table",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "tgtadls",
								"type": "DatasetReference",
								"parameters": {
									"filename": {
										"value": "@pipeline().parameters.filenm",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"schema": {
						"type": "string",
						"defaultValue": "TPCDS_SF100TCL"
					},
					"table": {
						"type": "string",
						"defaultValue": "CUSTOMER"
					},
					"filenm": {
						"type": "string",
						"defaultValue": "cUSTOMER3GB.csv"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-09-11T11:25:50Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SnowflakeTable')]",
				"[concat(variables('factoryId'), '/datasets/tgtadls')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sql2synapse')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SqlDWSink",
								"writeBehavior": "Insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Index",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "Index",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Customer_Id",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "Customer_Id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "First_Name",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "First_Name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Last_Name",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "Last_Name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Company",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "Company",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "City",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "City",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Country",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "Country",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Phone_1",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "Phone_1",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Phone_2",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "Phone_2",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Email",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "Email",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Subscription_Date",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "Subscription_Date",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Website",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "Website",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SqlServerTable1",
								"type": "DatasetReference",
								"parameters": {
									"schemascr": {
										"value": "@pipeline().parameters.schema_sch",
										"type": "Expression"
									},
									"tablesrc": {
										"value": "@pipeline().parameters.schema_tab",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "syanpsetest1m",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"schema_sch": {
						"type": "string"
					},
					"schema_tab": {
						"type": "string"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-09-06T06:06:56Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SqlServerTable1')]",
				"[concat(variables('factoryId'), '/datasets/syanpsetest1m')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSynapseAnalyticsTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSynapseAnalytics1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"tgt_schema": {
						"type": "string"
					},
					"tgt_table": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "DEPARTMENT_ID",
						"type": "varchar"
					},
					{
						"name": "DEPARTMENT_NAME",
						"type": "varchar"
					},
					{
						"name": "MANAGER_ID",
						"type": "varchar"
					},
					{
						"name": "LOCATION_ID",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": {
						"value": "@dataset().tgt_schema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().tgt_table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSynapseAnalytics1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Binary1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "detais.txt",
						"container": "adlsfseastus2"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "ff_departments1.csv",
						"container": "adlsfseastus2"
					},
					"columnDelimiter": ",",
					"escapeChar": "",
					"firstRowAsHeader": true,
					"quoteChar": ""
				},
				"schema": [
					{
						"name": "DEPARTMENT_ID",
						"type": "String"
					},
					{
						"name": "DEPARTMENT_NAME",
						"type": "String"
					},
					{
						"name": "MANAGER_ID",
						"type": "String"
					},
					{
						"name": "LOCATION_ID",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_ja5')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSynapseAnalytics1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "AzureBlobStorageFile"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSynapseAnalytics1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SnowflakeTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Snowflake1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"schema": {
						"type": "string"
					},
					"table": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "SnowflakeV2Table",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().schema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Snowflake1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_ja5')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "adlsfseastus2"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": null
				},
				"schema": [
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServerTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "source",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"schemascr": {
						"type": "string"
					},
					"tablesrc": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().schemascr",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().tablesrc",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/source')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dsazuresql')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"TABLE": {
						"type": "string"
					},
					"SCHEMA": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "tableId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "tableName",
						"type": "varchar"
					},
					{
						"name": "watermarkFieldName",
						"type": "varchar"
					},
					{
						"name": "ingestionActiveFlag",
						"type": "varchar"
					},
					{
						"name": "ingestionStartDate",
						"type": "datetime2",
						"scale": 0
					},
					{
						"name": "ingestionEndDate",
						"type": "datetime2",
						"scale": 0
					},
					{
						"name": "activeRecordFl",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": {
						"value": "@dataset().SCHEMA",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().TABLE",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dsblobraw')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"containerName": {
						"type": "String"
					},
					"directoryName": {
						"type": "String"
					},
					"fileName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().directoryName",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().containerName",
							"type": "Expression"
						}
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dssqlserver')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "source",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"schem": {
						"type": "string"
					},
					"tbl": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().schem",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().tbl",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/source')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sqlserversynapse')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSynapseAnalytics1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSynapseAnalytics1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/syanpsetest1m')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSynapseAnalytics1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "customer"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSynapseAnalytics1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tgtadls')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "files",
						"fileSystem": "adlsfseastus2"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": ""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage1_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorage1_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('AzureSqlDatabase1_properties_typeProperties_server')]",
					"database": "[parameters('AzureSqlDatabase1_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('AzureSqlDatabase1_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('AzureSqlDatabase1_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSynapseAnalytics1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"server": "[parameters('AzureSynapseAnalytics1_properties_typeProperties_server')]",
					"database": "[parameters('AzureSynapseAnalytics1_properties_typeProperties_database')]",
					"encrypt": "optional",
					"trustServerCertificate": true,
					"authenticationType": "SQL",
					"userName": "[parameters('AzureSynapseAnalytics1_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('AzureSynapseAnalytics1_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/HttpServer1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"url": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('HttpServer1_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Basic",
					"userName": "[parameters('HttpServer1_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('HttpServer1_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Snowflake1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SnowflakeV2",
				"typeProperties": {
					"authenticationType": "Basic",
					"accountIdentifier": "uy78853.central-india.azure",
					"user": "diwakar",
					"database": "[parameters('Snowflake1_properties_typeProperties_database')]",
					"warehouse": "check",
					"role": "ACCOUNTADMIN",
					"password": {
						"type": "SecureString",
						"value": "[parameters('Snowflake1_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/source')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"server": "[parameters('source_properties_typeProperties_server')]",
					"database": "[parameters('source_properties_typeProperties_database')]",
					"encrypt": "optional",
					"trustServerCertificate": true,
					"authenticationType": "SQL",
					"userName": "[parameters('source_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('source_password')]"
					}
				},
				"connectVia": {
					"referenceName": "integrationRuntime4",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/integrationRuntime4')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntime4')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		}
	]
}