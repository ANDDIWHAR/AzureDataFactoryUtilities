{
	"name": "PL_METADATA_copy1",
	"properties": {
		"activities": [
			{
				"name": "lkp_config",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "SELECT \n    CASE \n\t    WHEN COUNT(CASE WHEN RunningStatus = 'RUNNING' THEN 1 END) > 0 THEN 'running'\n        WHEN COUNT(CASE WHEN RunningStatus = 'Failed' THEN 1 END) > 0 THEN 'fail'        \n        WHEN COUNT(CASE WHEN RunningStatus = 'SUCCESS' THEN 1 END) = COUNT(*) THEN 'success'\n        ELSE 'unknown'\n    END AS overall_status\nFROM config.Pipelines_Config where sourcecode='DSA'\nand ActiveFlag='Y';",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "dsazuresql",
						"type": "DatasetReference",
						"parameters": {
							"TABLE": {
								"value": "@pipeline().parameters.table",
								"type": "Expression"
							},
							"SCHEMA": {
								"value": "@pipeline().parameters.SCHEMA",
								"type": "Expression"
							}
						}
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "If Condition1",
				"type": "IfCondition",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@or(contains(variables('STATUS'),'RUNNING'),\ncontains(variables('STATUS'),'FAILED'))",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "RUN THE JOB",
							"type": "ExecutePipeline",
							"dependsOn": [],
							"policy": {
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "RUN_SUB",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "another batch in progress OR FAILED",
							"type": "Wait",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"waitTimeInSeconds": 1
							}
						}
					]
				}
			},
			{
				"name": "If Condition2",
				"type": "IfCondition",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [
					{
						"activity": "Switch1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": []
			},
			{
				"name": "Switch1",
				"type": "Switch",
				"dependsOn": [
					{
						"activity": "Set variable1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"on": {
						"value": "@variables('STATUS')",
						"type": "Expression"
					},
					"cases": [
						{
							"value": "fail",
							"activities": [
								{
									"name": "handle the job failures",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 1
									}
								}
							]
						},
						{
							"value": "running",
							"activities": [
								{
									"name": "Wait for the job to complete",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 1
									}
								}
							]
						},
						{
							"value": "success",
							"activities": [
								{
									"name": "run the pipeline",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "RUN_SUB_copy1",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true
									}
								}
							]
						}
					]
				}
			},
			{
				"name": "Set variable1",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "lkp_config",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "STATUS",
					"value": {
						"value": "@activity('lkp_config').output.value",
						"type": "Expression"
					}
				}
			}
		],
		"parameters": {
			"sourcecode": {
				"type": "string",
				"defaultValue": "DSA"
			},
			"SCHEMA": {
				"type": "string",
				"defaultValue": "config"
			},
			"table": {
				"type": "string",
				"defaultValue": "Pipelines_Config"
			},
			"flag": {
				"type": "string",
				"defaultValue": "Y"
			}
		},
		"variables": {
			"STATUS": {
				"type": "String"
			}
		},
		"annotations": []
	}
}